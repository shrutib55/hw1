# -*- coding: utf-8 -*-
"""hw1_pt2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iDr9AyfGrdhJVVwoTnrHMUsgkIBw1V8S
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from sklearn.metrics import r2_score
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.linear_model import SGDRegressor
from sklearn.preprocessing import StandardScaler
# %matplotlib inline

yr18 = pd.read_csv('https://raw.githubusercontent.com/shrutib55/hw1/main/2018.csv')
yr19 = pd.read_csv('https://raw.githubusercontent.com/shrutib55/hw1/main/2019.csv')
hap = pd.concat([yr18, yr19],ignore_index=True)

hap = hap.drop(['Overall rank', 'Country or region'],axis=1)

x = hap.drop(['Score'],axis=1)
y = hap['Score']

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

model = SGDRegressor(alpha=0.0008, max_iter=10000, tol=1e-6)
model.fit(x_train, y_train)


print(model.coef_)
print(model.intercept_)
print()
y_pred = model.predict(x_train)
print(mean_squared_error(y_train, y_pred))
print(r2_score(y_train,y_pred))
print()
y_pred = model.predict(x_test)
print(mean_squared_error(y_test, y_pred))
print(r2_score(y_test,y_pred))